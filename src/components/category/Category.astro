---
import type { CategoryProps } from '@/components/category/types.ts'

const { pathName, category } = Astro.props as CategoryProps
const contentTotal = category.length

// undefinedを除外して、すべての要素がstring[]である新しい配列を作成
const getValidCategories = (categories: (string[] | undefined)[]): string[][] =>
  categories.filter((item): item is string[] => item !== undefined)

// カテゴリデータをフラット化し、各カテゴリの出現回数を集計
const getCategoryCount = (categories: string[][]): Record<string, number> =>
  categories.flat().reduce(
    (acc, category) => {
      acc[category] = (acc[category] || 0) + 1
      return acc
    },
    {} as Record<string, number>,
  )

// カテゴリをアルファベット順（日本語ロケール対応）にソートし、「カテゴリ名(出現回数)」形式のリストを生成
const getCategoryList = (categoryCount: Record<string, number>): [string, number][] =>
  Object.entries(categoryCount).sort(([a], [b]) =>
    a.localeCompare(b, 'ja', { sensitivity: 'base' }),
  )

const validCategories = getValidCategories(category)
const categoryCount = getCategoryCount(validCategories)
const categoryList = getCategoryList(categoryCount)
---

<div>
  <p>カテゴリー</p>
  <ul>
    <li>
      <a href={`/${pathName}/1/`}>
        すべて [{contentTotal}]記事
      </a>
    </li>
    {
      categoryList.map(([category, count]) => (
        <li>
          <a href={`/${pathName}/${category}/1/`}>
            {category} ({count})
          </a>
        </li>
      ))
    }
  </ul>
</div>
