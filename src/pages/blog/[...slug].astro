---
import { getCollection } from 'astro:content'
import Layout from '@/layouts/Layout.astro'
import type { HeadPageProps, OgImage, Robots } from '@/layouts/head/types'

const post = Astro.props
const { Content } = await post.render()

const headPage: HeadPageProps = {
  title: post.data.title,
  description: post.data.description,
  robots: post.data.robots as Robots,
  ogType: 'article',
  ogImage: (post.data.ogImage as OgImage) || '/ogp/general.webp', // TODO: MDX側のファイルのパスをどうするか決めること
  ogImageAlt: post.data.ogImageAlt || 'コンテンツです。',
  xCreator: post.data.xCreator as `@${string}`,
  author: post.data.author.id === 'anonymous' ? '匿名' : post.data.author.id,
}

export async function getStaticPaths() {
  // 本番用にビルドするときにのみ、isDraft: trueを含むエントリーを除外
  const posts = await getCollection('blog', ({ data }) => {
    return import.meta.env.PROD ? data.isDraft !== true : true
  })
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }))
}
---

<Layout headPage={headPage}>
  <div>
    {
      post.data.ogImage && (
        <img width={100} height={100} src={post.data.ogImage} alt='' />
      )
    }
  </div>
  <h1>{post.data.title}</h1>
  <hr />
  <Content />
</Layout>
