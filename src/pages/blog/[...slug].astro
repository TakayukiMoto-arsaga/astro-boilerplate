---
import { getCollection } from 'astro:content'
import { css } from '@/../styled-system/css'
import { TOC } from '@/components/toc/TOC.tsx'
import Layout from '@/layouts/Layout.astro'
import type { HeadPageProps, OgImage, Robots } from '@/layouts/head/types'

const PATH_NAME = 'blog'

const post = Astro.props.data
const { Content } = await Astro.props.render()

const authors = await getCollection('authors')
const authorID = (post.author as { id: string }).id
const author = authors.find((author) => author.id === authorID)?.data

const authorNameParts = [
  author?.name.last.formal,
  author?.name.middle.formal,
  author?.name.first.formal,
].filter(Boolean)
const authorName = authorNameParts.join(' ')

const headPage: HeadPageProps = {
  title: post.title,
  description: post.description,
  robots: post.robots as Robots,
  ogType: 'article',
  ogImage: (post.ogImage as OgImage) || `/src/assets/images/content/${PATH_NAME}/ogp.webp`,
  ogImageAlt: post.ogImageAlt || 'コンテンツです。',
  xCreator: author?.sns.xCreator as `@${string}`,
  author: typeof post.author === 'string' && post.author === '' ? '' : authorName,
}

export async function getStaticPaths() {
  // TODO: PATH_NAMEを変更したときは、以下の'blog'も変更してください。
  const posts = await getCollection('blog', ({ data }) => {
    // 本番用にビルドするときにのみ、isDraft: trueを含むエントリーを除外
    return import.meta.env.PROD ? data.isDraft !== true : true
  })

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }))
}

const blogDetail = css({
  '& h2': {
    fontSize: '2.5rem',
  },
  '& h3': {
    fontSize: '2.2rem',
  },

  '& p': {
    fontSize: '1.5rem',
  },
})
---

<Layout headPage={headPage}>
  <img
    width={400}
    height={210}
    src={post.ogImage ? post.ogImage : `/src/assets/images/content/${PATH_NAME}/ogp.webp`}
    alt={post.ogImageAlt ? post.ogImageAlt : 'コンテンツです'}
  />
  <h1>{post.title}</h1>
  <hr />
  <article class={blogDetail}>
    {/* 記事のタイトルにh1タグを使用するので、目次の見出しはh2タグから使ってください。 */}
    {
      /* MDXファイル内で最初に書かれている##の直上に、<Toc headings={getHeadings()} />を記述して目次を生成してください。 */
    }
    <Content
      components={{
        TOC,
      }}
    />
  </article>
</Layout>
